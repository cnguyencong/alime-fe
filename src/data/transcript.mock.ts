export const transcriptMock = {
  segments: [
    {
      end: 6.12,
      id: 0,
      start: 0,
      text: " Go, a statically typed compiled language, often described as C for the 21st century.",
    },
    {
      end: 10.64,
      id: 1,
      start: 6.12,
      text: " It's a popular choice for high-performance, server-side applications, and is the language",
    },
    // {
    //   end: 14.48,
    //   id: 2,
    //   start: 10.64,
    //   text: " that built tools like Docker, CockroachDB, and DeGraph.",
    // },
    // {
    //   end: 19.72,
    //   id: 3,
    //   start: 14.48,
    //   text: " It was created at Google in 2007 by legends who really know their stuff, like Ken Thompson,",
    // },
    // {
    //   end: 22.92,
    //   id: 4,
    //   start: 19.72,
    //   text: " the inventor of the B and C programming languages.",
    // },
    // {
    //   end: 26.560000000000002,
    //   id: 5,
    //   start: 22.92,
    //   text: " Version 1.0 was released as open-source software in 2012.",
    // },
    // {
    //   end: 31.72,
    //   id: 6,
    //   start: 26.56,
    //   text: " It was designed for simplicity and efficiency, and that's why we call it Go, and not Go Lang.",
    // },
    // {
    //   end: 35.92,
    //   id: 7,
    //   start: 31.72,
    //   text: " The source code is compiled down to machine code, which means it generally outperforms interpreted",
    // },
    // {
    //   end: 36.92,
    //   id: 8,
    //   start: 35.92,
    //   text: " languages.",
    // },
    // {
    //   end: 41.64,
    //   id: 9,
    //   start: 36.92,
    //   text: " But it's famous for its extremely fast compile times, made possible by innovations to dependency",
    // },
    // {
    //   end: 42.64,
    //   id: 10,
    //   start: 41.64,
    //   text: " analysis.",
    // },
    // {
    //   end: 46.599999999999994,
    //   id: 11,
    //   start: 42.64,
    //   text: " And even though it's a statically typed language, it performs type inference to deliver",
    // },
    // {
    //   end: 49.28,
    //   id: 12,
    //   start: 46.599999999999994,
    //   text: " a syntax that is very concise and practical.",
    // },
    // {
    //   end: 54.480000000000004,
    //   id: 13,
    //   start: 49.28,
    //   text: " It also has a package and module system, making it easy to import and export code between",
    // },
    // {
    //   end: 55.48,
    //   id: 14,
    //   start: 54.48,
    //   text: " the projects.",
    // },
    // {
    //   end: 59.559999999999995,
    //   id: 15,
    //   start: 55.48,
    //   text: " To get started, install Go, and then open an empty directory on your system, create a",
    // },
    // {
    //   end: 65.88,
    //   id: 16,
    //   start: 59.559999999999995,
    //   text: " file ending in .go, then add package main at the top to create a standalone executable,",
    // },
    // {
    //   end: 69.88,
    //   id: 17,
    //   start: 65.88,
    //   text: " then declare a main function, which is where your program will start executing.",
    // },
    // {
    //   end: 75.56,
    //   id: 18,
    //   start: 69.88,
    //   text: " Go has a standard library of core packages to handle common requirements like math, networking,",
    // },
    // {
    //   end: 76.88,
    //   id: 19,
    //   start: 75.56,
    //   text: " or formatted IO.",
    // },
    // {
    //   end: 81.72,
    //   id: 20,
    //   start: 76.88,
    //   text: " By importing FMT, we can print a line to the standard output, then run the Go build",
    // },
    // {
    //   end: 86.64,
    //   id: 21,
    //   start: 81.72,
    //   text: " command, and it quickly compiles the source code and dependencies into an executable binary.",
    // },
    // {
    //   end: 90.88,
    //   id: 22,
    //   start: 86.64,
    //   text: " When it comes to dependencies, we can also link to remote packages on GitHub, run Go,",
    // },
    // {
    //   end: 95.16,
    //   id: 23,
    //   start: 90.88,
    //   text: " mod, and knit from the command line, and that creates a Go module file that enables dependency",
    // },
    // {
    //   end: 96.16,
    //   id: 24,
    //   start: 95.16,
    //   text: " tracking.",
    // },
    // {
    //   end: 99.96000000000001,
    //   id: 25,
    //   start: 96.16,
    //   text: " Syntactically, Go is like a concise version of C or C++.",
    // },
    // {
    //   end: 104.4,
    //   id: 26,
    //   start: 99.96000000000001,
    //   text: " Declare a variable with the var keyword, followed by its name and type, and initialize",
    // },
    // {
    //   end: 105.52,
    //   id: 27,
    //   start: 104.4,
    //   text: " it with a value.",
    // },
    // {
    //   end: 110.12,
    //   id: 28,
    //   start: 105.52,
    //   text: " Or you might use the short assignment syntax to replace var, and let Go automatically infer",
    // },
    // {
    //   end: 111.12,
    //   id: 29,
    //   start: 110.12,
    //   text: " the type.",
    // },
    // {
    //   end: 113.64,
    //   id: 30,
    //   start: 111.12,
    //   text: " You can define multiple variables from a single line.",
    // },
    // {
    //   end: 117.44,
    //   id: 31,
    //   start: 113.64,
    //   text: " Go has all the other features you would expect in a programming language, like arrays, maps,",
    // },
    // {
    //   end: 121.88000000000001,
    //   id: 32,
    //   start: 117.44,
    //   text: " loops, and control flow, but also allows you to store the memory address of a value using",
    // },
    // {
    //   end: 126.92,
    //   id: 33,
    //   start: 121.88000000000001,
    //   text: " pointers, while disallowing pointer arithmetic, which often leads to dangerous and unpredictable",
    // },
    // {
    //   end: 127.92,
    //   id: 34,
    //   start: 126.92,
    //   text: " behavior.",
    // },
    // {
    //   end: 131.84,
    //   id: 35,
    //   start: 127.92,
    //   text: " In addition, it supports concurrency with Go routines, which are functions that can run",
    // },
    // {
    //   end: 136.64000000000001,
    //   id: 36,
    //   start: 131.84,
    //   text: " at the same time as other functions by utilizing multiple threads on a CPU.",
    // },
    // {
    //   end: 138.72,
    //   id: 37,
    //   start: 136.64000000000001,
    //   text: " This has been Go in 100 seconds.",
    // },
    // {
    //   end: 141.64,
    //   id: 38,
    //   start: 138.72,
    //   text: " Hit the like button if you want to see more short videos like this, and check out the",
    // },
    // {
    //   end: 145.32,
    //   id: 39,
    //   start: 141.64,
    //   text: " full article to write your first 100 lines of Go on Fireship I-O.",
    // },
    // {
    //   end: 147.84,
    //   id: 40,
    //   start: 145.32,
    //   text: " Thanks for watching, and I will see you in the next one.",
    // },
  ],
  success: true,
};
